name: Deploy to Production

on:
  push:
    branches:
      - main
  workflow_dispatch: {}

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run tests
        run: npm test || echo "Tests not configured, skipping..."

      - name: Build application
        run: npm run build

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Verify Vercel secrets
        run: |
          if [ -z "${{ secrets.VERCEL_TOKEN }}" ]; then
            echo "❌ VERCEL_TOKEN secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.VERCEL_ORG_ID }}" ]; then
            echo "❌ VERCEL_ORG_ID secret is not set"
            exit 1
          fi
          if [ -z "${{ secrets.VERCEL_PROJECT_ID }}" ]; then
            echo "❌ VERCEL_PROJECT_ID secret is not set"
            exit 1
          fi
          echo "✅ All Vercel secrets are configured"

      - name: Pull Vercel Environment Information
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel pull --yes --environment=production --token=$VERCEL_TOKEN
        
      - name: Build Project Artifacts
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel build --prod --token=$VERCEL_TOKEN
        
      - name: Deploy Project Artifacts to Vercel
        env:
          VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
          VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
          VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}
        run: vercel deploy --prebuilt --prod --token=$VERCEL_TOKEN

      - name: Wait for deployment
        run: sleep 60

      - name: Run post-deployment tests
        run: npm run verify:deployment
        continue-on-error: true

      - name: Notify deployment status
        if: always()
        run: |
          if [ ${{ job.status }} == 'success' ]; then
            echo "✅ Deployment successful! Website is live at https://elmag-insurance.com"
          else
            echo "❌ Deployment failed. Please check the logs."
          fi